#!/usr/bin/python

from data.file_store import FileStore
import sys


ERROR_MESSAGE = """
Usage:
    note save <text of note>
    note list
    note delete <id of note>
{message}"""

DATA_LAYER = FileStore("data_store.txt")

def error(message):
    print(ERROR_MESSAGE.format(message=message))

def add_note(args):
    if len(args) < 3:
        error("note save requires text to save")
    note = ' '.join(args[2:])
    print("Added note {note_id}.".format(note_id=DATA_LAYER.add_note(note)))

def list_notes(args):
    if len(args) > 2:
        error("note list received an unexpected argument")
    for note in DATA_LAYER.list_notes():
        print(note)

def delete_note(args):
    if len(args) != 3:
        error("note delete expects only one argument, received {n}".format(n=len(args)))
    try:
        DATA_LAYER.delete_note(args[2])
    except Exception as exc:
        error(exc)
    else:
        print("Deleted note {note_id}.".format(args[3]))

COMMANDS = {
    "add": add_note,
    "list": list_notes,
    "delete": delete_note,
}

def main():
    if len(sys.argv) < 2:
        error("At least one of save, list, or delete must be cpass as a command")
        exit(1)
    if sys.argv[1] not in COMMANDS:
        error("Invalid command \"{command}\"".format(command=sys.argv[1]))
        exit(2)
    COMMANDS[sys.argv[1]](sys.argv)


if __name__ == "__main__":
    main()
